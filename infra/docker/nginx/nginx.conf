user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /run/nginx.pid;

events {
	worker_connections 1024;
	use epoll;
}

http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
					'$status $body_bytes_sent "$http_referer" '
					'"$http_user_agent" "$http_x_forwarded_for"';
	
	access_log /var/log/nginx/access.log main;

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	server_tokens off;
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";

	# Optimisations pour microservices
	proxy_buffering on;
	proxy_buffer_size 4k;
	proxy_buffers 8 4k;
	proxy_busy_buffers_size 8k;

	# Cache DNS plus long
	resolver 127.0.0.11 valid=60s ipv6=off;
	resolver_timeout 5s;

	map $http_upgrade $connection_upgrade {
		default upgrade;
		'' close;
	}

	# Upstreams avec keepalive pour r√©utiliser les connexions
	upstream chatback_upstream {
		server chatback:3000;
		keepalive 32;
	}

	upstream authback_upstream {
		server authback:3050;
		keepalive 32;
	}

	upstream gameback_upstream {
		server gameback:3010;
		keepalive 32;
	}

	upstream tournamentback_upstream {
		server tournamentback:3040;
		keepalive 32;
	}

	upstream quickplayback_upstream {
		server quickplayback:3030;
		keepalive 32;
	}

	upstream database_upstream {
		server database:3020;
		keepalive 32;
	}

	upstream front_upstream {
		server front:5173;
		keepalive 32;
	}

	# Redirection HTTP vers HTTPS
	server {
		listen 80 default_server;
		server_name _;
		
		access_log /var/log/nginx/http_redirect.log main;
		
		return 301 https://$host$request_uri;
	}

	# Configuration HTTPS
	server {
		listen 443 ssl default_server;
		server_name _;

		http2 on;

		ssl_certificate /etc/nginx/ssl/cert.pem;
		ssl_certificate_key /etc/nginx/ssl/key.pem;
		
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
		ssl_prefer_server_ciphers off;
		ssl_session_cache shared:SSL:10m;
		ssl_session_timeout 10m;

		add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

		# Headers proxy communs
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		# Timeouts
		proxy_connect_timeout 60s;
		proxy_send_timeout 60s;
		proxy_read_timeout 60s;

		# Routes des backends - SANS trailing slash dans proxy_pass
		location /chatback/ {
			rewrite ^/chatback/(.*)$ /$1 break;
			proxy_pass http://chatback_upstream;
		}

		location /authback/ {
			rewrite ^/authback/(.*)$ /$1 break;
			proxy_pass http://authback_upstream;
		}

		location /gameback/ {
			rewrite ^/gameback/(.*)$ /$1 break;
			proxy_pass http://gameback_upstream;
		}

		location /tournamentback/ {
			rewrite ^/tournamentback/(.*)$ /$1 break;
			proxy_pass http://tournamentback_upstream;
		}

		location /quickplay/ {
			rewrite ^/quickplay/(.*)$ /$1 break;
			proxy_pass http://quickplayback_upstream;
		}

		location /gamedb/ {
			rewrite ^/gamedb/(.*)$ /$1 break;
			proxy_pass http://database_upstream;
		}

		location /nginx-health {
			access_log off;
			return 200 "healthy\n";
			add_header Content-Type text/plain;
		}

		location / {
			proxy_pass http://front_upstream;
			error_page 404 = @fallback;
		}

		location @fallback {
			proxy_pass http://front_upstream;
		}
	}
}
